#!/usr/bin/env bash
set -euo pipefail

export PATH="${0%/*}:${PATH}"
export FZF_DEFAULT_OPTS="--height='100%' --layout='reverse' --cycle --color='bg+:6,prompt:1,gutter:-1'"


# private library functions

_fzf_wrapper() { echo "fzf --prompt="\"${1}\"""; }

_exec_fzf() { eval "$(_fzf_wrapper "${1}")"; }

_wmctrl_wrapper() {
  local -r selection="$(wmctrl -lpx | awk '!/floating/ { print $3, substr($0, index($0, $6)) }' | _exec_fzf "${1} application: ")"
  [[ -z "${selection}" ]] && exit

  eval wmctrl -F"${2}" "\"$(awk '{ print substr($0, index($0, $2)) }' <<< "${selection}")\""
}


# public functions

run_menu() { i3-dmenu-desktop --dmenu="$(_fzf_wrapper "Run application: ")"; }

pass_menu() { gopass list --flat | _exec_fzf "Password store: " | xargs --no-run-if-empty -I % gopass show -c %; }

clip_menu() {
  export CM_LAUNCHER="rofi-script"

  local -r selection="$(clipmenu | _exec_fzf "Clipboard content: ")"
  [[ -z "${selection}" ]] && exit

  clipmenu "${selection}"
}

focus_menu() { _wmctrl_wrapper "Focus" "a"; }

exit_menu() { _wmctrl_wrapper "Exit" "c"; }

kill_menu() {
  local -r selection="$(ps -u "${USER}" -o pid,pcpu,pmem,comm | sed 1d | _exec_fzf "Kill process: ")"
  [[ -z "${selection}" ]] && exit

  kill "$(awk '{ print $2 }' <<< "${selection}" | tr "\n" " ")"
  notify-send "$(awk '{ print $5 }' <<< "${selection}")" "Killed process" -u low
}

docker_log_menu() { docker ps --all --format '{{.Names}}' | _exec_fzf "Follow container logs: " | xargs --no-run-if-empty -I % docker logs --follow %; }

docker_kill_menu() { docker ps --all --format '{{.Names}}' | _exec_fzf "Kill container: " | xargs --no-run-if-empty -I % docker rm --force --volumes %; }

power_menu() {
  local -r selection="$(_exec_fzf "Power option: " <<< $(printf "[Shutdown]\n[Reboot]\n[Sleep]\n[Lock]"))"
  case ${selection} in
    "[Shutdown]")
      systemctl poweroff
      ;;
    "[Reboot]")
      systemctl reboot
      ;;
    "[Sleep]")
      systemctl suspend
      ;;
    "[Lock]")
      loginctl lock-session
      ;;
  esac
}

screen_menu() {
  local -r selection="$(_exec_fzf "Screen layout: " <<< $(printf "[Laptop]\n[Home]\n[TV]"))"
  case ${selection} in
    "[Laptop]")
      screen-layout laptop
      ;;
    "[Home]")
      screen-layout home
      ;;
    "[TV]")
      screen-layout tv
      ;;
  esac
}

theme_menu() {
  local -r selection="$(_exec_fzf "Color theme: " <<< $(printf "[Light]\n[Dark]"))"
  case ${selection} in
    "[Light]")
      color-theme light
      ;;
    "[Dark]")
      color-theme dark
      ;;
  esac
}


# main

case ${1:-} in
  "run")
    run_menu
    ;;
  "pass")
    pass_menu
    ;;
  "clip")
    clip_menu
    ;;
  "focus")
    focus_menu
    ;;
  "exit")
    exit_menu
    ;;
  "kill")
    kill_menu
    ;;
  "docker-logs")
    docker_log_menu
    ;;
  "docker-kill")
    docker_kill_menu
    ;;
  "power")
    power_menu
    ;;
  "screen")
    screen_menu
    ;;
  "theme")
    theme_menu
    ;;
  *)
    >&2 echo "Error: unknown parameters: ${@}"
    exit 1
    ;;
esac
